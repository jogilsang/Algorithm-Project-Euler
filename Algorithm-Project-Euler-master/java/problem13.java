package eulerProject;

import java.math.BigInteger;

public class problem13 {
	
	
	public static void main(String[] args) {
		
	}

	/*
BigInteger a1= BigInteger.valueOf(37107287533902102798797998220837590246510135740250 );
BigInteger a2= BigInteger.valueOf(46376937677490009712648124896970078050417018260538 );
BigInteger a3= BigInteger.valueOf(74324986199524741059474233309513058123726617309629 );
BigInteger a4= BigInteger.valueOf(91942213363574161572522430563301811072406154908250 );
BigInteger a5= BigInteger.valueOf(23067588207539346171171980310421047513778063246676 );
BigInteger a6= BigInteger.valueOf(89261670696623633820136378418383684178734361726757 );
BigInteger a7= BigInteger.valueOf(28112879812849979408065481931592621691275889832738 );
BigInteger a8= BigInteger.valueOf(44274228917432520321923589422876796487670272189318 );
BigInteger a9= BigInteger.valueOf(47451445736001306439091167216856844588711603153276 );
BigInteger a10=BigInteger.valueOf( 70386486105843025439939619828917593665686757934951) ;
BigInteger a11=BigInteger.valueOf( 62176457141856560629502157223196586755079324193331) ;
BigInteger a12=BigInteger.valueOf( 64906352462741904929101432445813822663347944758178) ;
BigInteger a13=BigInteger.valueOf( 92575867718337217661963751590579239728245598838407) ;
BigInteger a14=BigInteger.valueOf( 58203565325359399008402633568948830189458628227828) ;
BigInteger a15=BigInteger.valueOf( 80181199384826282014278194139940567587151170094390) ;
BigInteger a16=BigInteger.valueOf( 35398664372827112653829987240784473053190104293586) ;
BigInteger a17=BigInteger.valueOf( 86515506006295864861532075273371959191420517255829) ;
BigInteger a18=BigInteger.valueOf( 71693888707715466499115593487603532921714970056938) ;
BigInteger a19=BigInteger.valueOf( 54370070576826684624621495650076471787294438377604) ;
BigInteger a20=BigInteger.valueOf( 53282654108756828443191190634694037855217779295145) ;
BigInteger a21=BigInteger.valueOf( 36123272525000296071075082563815656710885258350721) ;
BigInteger a22=BigInteger.valueOf( 45876576172410976447339110607218265236877223636045) ;
BigInteger a23=BigInteger.valueOf( 17423706905851860660448207621209813287860733969412) ;
BigInteger a24=BigInteger.valueOf( 81142660418086830619328460811191061556940512689692) ;
BigInteger a25=BigInteger.valueOf( 51934325451728388641918047049293215058642563049483) ;
BigInteger a26=BigInteger.valueOf( 62467221648435076201727918039944693004732956340691) ;
BigInteger a27=BigInteger.valueOf( 15732444386908125794514089057706229429197107928209) ;
BigInteger a28=BigInteger.valueOf( 55037687525678773091862540744969844508330393682126) ;
BigInteger a29=BigInteger.valueOf( 18336384825330154686196124348767681297534375946515) ;
BigInteger a30=BigInteger.valueOf( 80386287592878490201521685554828717201219257766954) ;
BigInteger a31=BigInteger.valueOf( 78182833757993103614740356856449095527097864797581) ;
BigInteger a32=BigInteger.valueOf( 16726320100436897842553539920931837441497806860984) ;
BigInteger a33=BigInteger.valueOf( 48403098129077791799088218795327364475675590848030) ;
BigInteger a34=BigInteger.valueOf( 87086987551392711854517078544161852424320693150332) ;
BigInteger a35=BigInteger.valueOf( 59959406895756536782107074926966537676326235447210) ;
BigInteger a36=BigInteger.valueOf( 69793950679652694742597709739166693763042633987085) ;
BigInteger a37=BigInteger.valueOf( 41052684708299085211399427365734116182760315001271) ;
BigInteger a38=BigInteger.valueOf( 65378607361501080857009149939512557028198746004375) ;
BigInteger a39=BigInteger.valueOf( 35829035317434717326932123578154982629742552737307) ;
BigInteger a40=BigInteger.valueOf( 94953759765105305946966067683156574377167401875275) ;
BigInteger a41=BigInteger.valueOf( 88902802571733229619176668713819931811048770190271) ;
BigInteger a42=BigInteger.valueOf( 25267680276078003013678680992525463401061632866526) ;
BigInteger a43=BigInteger.valueOf( 36270218540497705585629946580636237993140746255962) ;
BigInteger a44=BigInteger.valueOf( 24074486908231174977792365466257246923322810917141) ;
BigInteger a45=BigInteger.valueOf( 91430288197103288597806669760892938638285025333403) ;
BigInteger a46=BigInteger.valueOf( 34413065578016127815921815005561868836468420090470) ;
BigInteger a47=BigInteger.valueOf( 23053081172816430487623791969842487255036638784583) ;
BigInteger a48=BigInteger.valueOf( 11487696932154902810424020138335124462181441773470) ;
BigInteger a49=BigInteger.valueOf( 63783299490636259666498587618221225225512486764533) ;
BigInteger a50=BigInteger.valueOf( 67720186971698544312419572409913959008952310058822) ;
BigInteger a51=BigInteger.valueOf( 95548255300263520781532296796249481641953868218774) ;
BigInteger a52=BigInteger.valueOf( 76085327132285723110424803456124867697064507995236) ;
BigInteger a53=BigInteger.valueOf( 37774242535411291684276865538926205024910326572967) ;
BigInteger a54=BigInteger.valueOf( 23701913275725675285653248258265463092207058596522) ;
BigInteger a55=BigInteger.valueOf( 29798860272258331913126375147341994889534765745501) ;
BigInteger a56=BigInteger.valueOf( 18495701454879288984856827726077713721403798879715) ;
BigInteger a57=BigInteger.valueOf( 38298203783031473527721580348144513491373226651381) ;
BigInteger a58=BigInteger.valueOf( 34829543829199918180278916522431027392251122869539) ;
BigInteger a59=BigInteger.valueOf( 40957953066405232632538044100059654939159879593635) ;
BigInteger a60=BigInteger.valueOf( 29746152185502371307642255121183693803580388584903) ;
BigInteger a61=BigInteger.valueOf( 41698116222072977186158236678424689157993532961922) ;
BigInteger a62=BigInteger.valueOf( 23189706772547915061505504953922979530901129967519) ;
BigInteger a63=BigInteger.valueOf( 86188088225875314529584099251203829009407770775672) ;
BigInteger a64=BigInteger.valueOf( 11306739708304724483816533873502340845647058077308) ;
BigInteger a65=BigInteger.valueOf( 82959174767140363198008187129011875491310547126581) ;
BigInteger a66=BigInteger.valueOf( 97623331044818386269515456334926366572897563400500) ;
BigInteger a67=BigInteger.valueOf( 42846280183517070527831839425882145521227251250327) ;
BigInteger a68=BigInteger.valueOf( 55121603546981200581762165212827652751691296897789) ;
BigInteger a69=BigInteger.valueOf( 32238195734329339946437501907836945765883352399886) ;
BigInteger a70=BigInteger.valueOf( 75506164965184775180738168837861091527357929701337) ;
BigInteger a71=BigInteger.valueOf( 62177842752192623401942399639168044983993173312731) ;
BigInteger a72=BigInteger.valueOf( 32924185707147349566916674687634660915035914677504) ;
BigInteger a73=BigInteger.valueOf( 99518671430235219628894890102423325116913619626622) ;
BigInteger a74=BigInteger.valueOf( 73267460800591547471830798392868535206946944540724) ;
BigInteger a75=BigInteger.valueOf( 76841822524674417161514036427982273348055556214818) ;
BigInteger a76=BigInteger.valueOf( 97142617910342598647204516893989422179826088076852) ;
BigInteger a77=BigInteger.valueOf( 87783646182799346313767754307809363333018982642090) ;
BigInteger a78=BigInteger.valueOf( 10848802521674670883215120185883543223812876952786) ;
BigInteger a79=BigInteger.valueOf( 71329612474782464538636993009049310363619763878039) ;
BigInteger a80=BigInteger.valueOf( 62184073572399794223406235393808339651327408011116) ;
BigInteger a81=BigInteger.valueOf( 66627891981488087797941876876144230030984490851411) ;
BigInteger a82=BigInteger.valueOf( 60661826293682836764744779239180335110989069790714) ;
BigInteger a83=BigInteger.valueOf( 85786944089552990653640447425576083659976645795096) ;
BigInteger a84=BigInteger.valueOf( 66024396409905389607120198219976047599490197230297) ;
BigInteger a85=BigInteger.valueOf( 64913982680032973156037120041377903785566085089252) ;
BigInteger a86=BigInteger.valueOf( 16730939319872750275468906903707539413042652315011) ;
BigInteger a87=BigInteger.valueOf( 94809377245048795150954100921645863754710598436791) ;
BigInteger a88=BigInteger.valueOf( 78639167021187492431995700641917969777599028300699) ;
BigInteger a89=BigInteger.valueOf( 15368713711936614952811305876380278410754449733078) ;
BigInteger a90=BigInteger.valueOf( 40789923115535562561142322423255033685442488917353) ;
BigInteger a91=BigInteger.valueOf( 44889911501440648020369068063960672322193204149535) ;
BigInteger a92=BigInteger.valueOf( 41503128880339536053299340368006977710650566631954) ;
BigInteger a93=BigInteger.valueOf( 81234880673210146739058568557934581403627822703280) ;
BigInteger a94=BigInteger.valueOf( 82616570773948327592232845941706525094512325230608) ;
BigInteger a95=BigInteger.valueOf( 22918802058777319719839450180888072429661980811197) ;
BigInteger a96=BigInteger.valueOf( 77158542502016545090413245809786882778948721859617) ;
BigInteger a97=BigInteger.valueOf( 72107838435069186155435662884062257473692284509516) ;
BigInteger a98=BigInteger.valueOf( 20849603980134001723930671666823555245252804609722) ;
BigInteger a99=BigInteger.valueOf( 53503534226472524250874054075591789781264330331690) ;
BigInteger a100=BigInteger.valueOf( 62467957194401269043877107275048102390895523597457) ;
	*/
	
	
	
	
	
	
	
	
}
